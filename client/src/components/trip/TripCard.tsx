import React, { useState } from 'react';
import { TripCardProps } from '@/types/trip';
import JourneyMap from './JourneyMap';
import ItineraryList from './ItineraryList';

/**
 * TripCard displays a complete trip suggestion generated by the AI
 * It includes an interactive map, trip information, and a day-by-day itinerary
 */
const TripCard: React.FC<TripCardProps> = ({
  id,
  title,
  description,
  whyWeChoseThis,
  difficultyLevel,
  priceEstimate,
  duration,
  location,
  suggestedGuides,
  mapCenter,
  markers,
  journey,
  itinerary,
  onModifyRequest
}) => {
  const [isMapExpanded, setIsMapExpanded] = useState(false);
  const [showDetails, setShowDetails] = useState(false);

  // Toggle map expansion
  const toggleMapExpand = () => {
    setIsMapExpanded(!isMapExpanded);
  };

  // Convert distance from meters to miles with safety checks
  const totalDistanceMiles = journey && journey.totalDistance 
    ? (journey.totalDistance / 1609.34).toFixed(1) 
    : '0.0';
  
  // Convert duration from seconds to hours with safety checks
  const totalDurationHours = journey && journey.totalDuration 
    ? (journey.totalDuration / 3600).toFixed(1) 
    : '0.0';

  return (
    <div className="border rounded-lg overflow-hidden shadow-md bg-white mb-4">
      <div className="p-4">
        <h2 className="text-xl font-bold mb-2">{title}</h2>
        <div className="mb-2">
          <span className="bg-primary/10 text-primary text-xs px-2 py-1 rounded mr-2">
            {location}
          </span>
          <span className="bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded">
            {duration}
          </span>
        </div>
        
        <p className="text-gray-700 mb-4">{description}</p>
        
        <div className="mb-4">
          <JourneyMap
            mapId={`map-${id}`}
            center={mapCenter}
            markers={markers}
            journey={journey}
            isExpanded={isMapExpanded}
            toggleExpand={toggleMapExpand}
          />
        </div>
        
        <div className="grid grid-cols-2 gap-2 mb-4 text-sm">
          <div>
            <span className="font-medium">Difficulty:</span> {difficultyLevel}
          </div>
          <div>
            <span className="font-medium">Price:</span> {priceEstimate}
          </div>
          <div>
            <span className="font-medium">Distance:</span> {totalDistanceMiles} miles
          </div>
          <div>
            <span className="font-medium">Duration:</span> ~{totalDurationHours} hrs
          </div>
        </div>
        
        <div className="mb-4">
          <button
            onClick={() => setShowDetails(!showDetails)}
            className="text-primary hover:text-primary/80 text-sm flex items-center"
          >
            {showDetails ? 'Hide details' : 'Show details'}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              className={`ml-1 transition-transform ${showDetails ? 'rotate-180' : 'rotate-0'}`}
            >
              <polyline points="6 9 12 15 18 9"></polyline>
            </svg>
          </button>
          
          {showDetails && (
            <div className="mt-3 text-sm">
              <div className="mb-3">
                <h3 className="font-medium">Why We Chose This For You</h3>
                <p className="text-gray-600">{whyWeChoseThis}</p>
              </div>
              
              <ItineraryList itinerary={itinerary} suggestedGuides={suggestedGuides} />
            </div>
          )}
        </div>
        
        <div className="flex justify-between">
          <a 
            href={`/map?id=${id}`}
            className="bg-primary/10 hover:bg-primary/20 text-primary px-4 py-2 rounded transition-colors text-sm"
          >
            View Full Map
          </a>
          <button
            onClick={() => onModifyRequest(id)}
            className="bg-primary/10 hover:bg-primary/20 text-primary px-4 py-2 rounded transition-colors text-sm"
          >
            Modify This Trip
          </button>
        </div>
      </div>
    </div>
  );
};

export default TripCard;